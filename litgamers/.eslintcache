[{"C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\index.js":"1","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\App.js":"2","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\Contact.js":"3","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\About.js":"4","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\Header.js":"5","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\FiveDollarGames.js":"6","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\FiftyCentGames.js":"7","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\Footer.js":"8","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\FiveCentGames.js":"9","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\OneDollarGames.js":"10","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\OneCentGames.js":"11","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\FreeGames.js":"12","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\Nav.js":"13","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\Home.js":"14","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\Sidebar.js":"15","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\Dashboard.js":"16","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\Login.js":"17","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\utils\\Common.js":"18","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\utils\\PublicRoute.js":"19","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\utils\\PrivateRoute.js":"20","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\RegisterUser.js":"21","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\utils\\PrivateOneCent.js":"22","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\HotSauceComponents\\HotSauce01.js":"23","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\HotSauceComponents\\HotSauce5.js":"24","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\HotSauceComponents\\HotSauce50.js":"25","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\HotSauceComponents\\HotSauce1.js":"26","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\HotSauceComponents\\HotSauce05.js":"27","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\HotSauceComponents\\HotSauceFree.js":"28","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\utils\\PrivateFiveCent.js":"29","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\utils\\PrivateFiftyCent.js":"30","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\utils\\PrivateOneDollar.js":"31","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\utils\\PrivateFiveDollar.js":"32","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\SpaceShooterComponents\\SpaceShooterFree.js":"33","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\Balance.js":"34","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\CrazyPongComponents\\CrazyPong01.js":"35","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\CrazyPongComponents\\CrazyPongFree.js":"36","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\CrazyPongComponents\\CrazyPong50.js":"37","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\CrazyPongComponents\\CrazyPong05.js":"38","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\CrazyPongComponents\\CrazyPong1.js":"39","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\CrazyPongComponents\\CrazyPong5.js":"40"},{"size":219,"mtime":1608305444700,"results":"41","hashOfConfig":"42"},{"size":4588,"mtime":1620089413856,"results":"43","hashOfConfig":"42"},{"size":3120,"mtime":1613702472897,"results":"44","hashOfConfig":"42"},{"size":2621,"mtime":1611094415771,"results":"45","hashOfConfig":"42"},{"size":244,"mtime":1609791256076,"results":"46","hashOfConfig":"42"},{"size":4031,"mtime":1620231184298,"results":"47","hashOfConfig":"42"},{"size":4014,"mtime":1620230893691,"results":"48","hashOfConfig":"42"},{"size":2092,"mtime":1611112828887,"results":"49","hashOfConfig":"42"},{"size":4014,"mtime":1620231178103,"results":"50","hashOfConfig":"42"},{"size":4077,"mtime":1620231204249,"results":"51","hashOfConfig":"42"},{"size":3961,"mtime":1620231199505,"results":"52","hashOfConfig":"42"},{"size":3147,"mtime":1620231353585,"results":"53","hashOfConfig":"42"},{"size":2256,"mtime":1610423489395,"results":"54","hashOfConfig":"42"},{"size":2972,"mtime":1619823420438,"results":"55","hashOfConfig":"42"},{"size":2718,"mtime":1607099451174,"results":"56","hashOfConfig":"42"},{"size":12575,"mtime":1620336983595,"results":"57","hashOfConfig":"42"},{"size":4266,"mtime":1611092983684,"results":"58","hashOfConfig":"42"},{"size":1616,"mtime":1608740877707,"results":"59","hashOfConfig":"42"},{"size":424,"mtime":1607376113497,"results":"60","hashOfConfig":"42"},{"size":455,"mtime":1607376109713,"results":"61","hashOfConfig":"42"},{"size":2983,"mtime":1611089426436,"results":"62","hashOfConfig":"42"},{"size":481,"mtime":1608740815883,"results":"63","hashOfConfig":"42"},{"size":5924,"mtime":1619750213550,"results":"64","hashOfConfig":"42"},{"size":5943,"mtime":1613705839678,"results":"65","hashOfConfig":"42"},{"size":5966,"mtime":1613705861429,"results":"66","hashOfConfig":"42"},{"size":6097,"mtime":1619750228332,"results":"67","hashOfConfig":"42"},{"size":5957,"mtime":1613705850012,"results":"68","hashOfConfig":"42"},{"size":3440,"mtime":1609784548521,"results":"69","hashOfConfig":"42"},{"size":484,"mtime":1608740795436,"results":"70","hashOfConfig":"42"},{"size":487,"mtime":1608740786498,"results":"71","hashOfConfig":"42"},{"size":487,"mtime":1608740822867,"results":"72","hashOfConfig":"42"},{"size":490,"mtime":1608740804939,"results":"73","hashOfConfig":"42"},{"size":3076,"mtime":1609784538124,"results":"74","hashOfConfig":"42"},{"size":1069,"mtime":1609783670040,"results":"75","hashOfConfig":"76"},{"size":5915,"mtime":1619750179889,"results":"77","hashOfConfig":"42"},{"size":3429,"mtime":1619750436927,"results":"78","hashOfConfig":"42"},{"size":5957,"mtime":1619750084828,"results":"79","hashOfConfig":"42"},{"size":5948,"mtime":1619750116935,"results":"80","hashOfConfig":"42"},{"size":6088,"mtime":1619750195505,"results":"81","hashOfConfig":"42"},{"size":5934,"mtime":1619750138327,"results":"82","hashOfConfig":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},"4blxu0",{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"85"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"85"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"85"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"85"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"85"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"85"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"85"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"85"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"85"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},"lb9h62",{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"85"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"85"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"85"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"85"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"85"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"85"},"C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\index.js",[],["180","181"],"C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\App.js",[],"C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\Contact.js",[],"C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\About.js",[],"C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\Header.js",[],"C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\FiveDollarGames.js",[],"C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\FiftyCentGames.js",[],"C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\Footer.js",["182"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\nconst Footer = () => {\r\n    let location = useLocation();\r\n\r\n    const [activePage, setActivePage] = useState('');\r\n\r\n    useEffect(() => {\r\n        \r\n        switch (location.pathname) {\r\n            case '/':\r\n                setActivePage('home');\r\n            break;\r\n            case '/availablespace':\r\n                setActivePage('availablespace');\r\n            break;\r\n            case '/currenttenants':\r\n                setActivePage('currenttenants');\r\n            break;\r\n            case '/history':\r\n                setActivePage('history');\r\n            break;\r\n            case '/downtown':\r\n                setActivePage('downtown');\r\n            break;\r\n            case '/contact':\r\n                setActivePage('contact');\r\n            break;\r\n            case '/admin':\r\n                setActivePage('admin');\r\n            break;\r\n            default: \r\n                setActivePage('home');\r\n            break;\r\n    }\r\n}, [location.pathname]);\r\n    return (\r\n        <footer>\r\n            <br></br>\r\n            <br></br>\r\n            <div class=\"nav justify-content-center\">\r\n                <Link id=\"navFoot\" onClick={() => setActivePage('home')} className={activePage === 'home' ? 'nav-link active' : 'nav-link'} to=\"/\">Home</Link>\r\n                <Link id=\"navFoot\" onClick={() => setActivePage('about')} className={activePage === 'about' ? 'nav-link active' : 'nav-link'} to=\"/about\">About</Link>\r\n                <Link id=\"navFoot\" onClick={() => setActivePage('contact')} className={activePage === 'contact' ? 'nav-link active' : 'nav-link'} to=\"/contact\">Contact</Link>\r\n            </div>\r\n            <div className=\"footer-content\">\r\n                <p>Copyright � 2020 <b>Fit-To-Tech (FTT) Technologies</b>&nbsp;&nbsp; All rights reserved.</p>\r\n                Visit the Website <a id=\"navFoot\" href=\"http://fittotech.net\" target=\"_blank\">fittotech.net</a><br></br>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\FiveCentGames.js",[],"C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\OneDollarGames.js",["183"],"import React, { useState, useEffect }from 'react';\r\nimport Sidebar from './Sidebar';\r\nimport {PlayFabClient} from 'playfab-sdk';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst OneDollar = () => {\r\n    const [balance, setBalance] = useState('');\r\n\r\n    useEffect(() => {\r\n        getBalance();\r\n    })\r\n\r\n    const getBalance = async () => {\r\n        if (sessionStorage.getItem(\"balance\")) {\r\n            setBalance(sessionStorage.balance);\r\n            console.log(balance)\r\n        }\r\n        else {\r\n            setBalance(null);\r\n            console.log(balance)\r\n        }\r\n    }\r\n    return (\r\n        <main>\r\n            <header>\r\n                { balance !== null && (\r\n                    <div className=\"balance\">\r\n                        <span className=\"balance1\">Balance: ${balance}</span>\r\n                    </div>\r\n                    )\r\n                }\r\n                { balance === null && (\r\n                    <div className=\"balance\">\r\n                        <span className=\"balance1\">Not Logged In</span> <br></br>\r\n                        <span className=\"balance1\">Balance: $0</span>\r\n                    </div>\r\n                    )\r\n                }\r\n            </header>\r\n            <div class=\"row\">\r\n                <div>\r\n                    <Sidebar />\r\n                </div>\r\n                <div class=\"col\">\r\n                <h1 className=\"title\">$1 Tournaments</h1>\r\n                <h3 className=\"title\">Tournaments Currently Reset Weekly</h3>\r\n                <h5 className=\"title\"><u>Payouts</u></h5>\r\n                <div class=\"row\">\r\n                    <div class=\"col\">\r\n                        <h7>4 or less player entries</h7>\r\n                        <ul>\r\n                            <li>1st: $1.10 minimum + split pot</li>\r\n                            <li>2nd: $0.40 minimum + split pot</li>\r\n                        </ul>\r\n                    </div>\r\n                    <div class=\"col\">\r\n                        <h7>5 to 9 player entries</h7>\r\n                        <ul>\r\n                            <li>1st: $2.15 minimum + split pot</li>\r\n                            <li>2nd: $1.10 minimum + split pot</li>\r\n                            <li>3rd: $0.50 minimum + split pot</li>\r\n                        </ul>\r\n                    </div>\r\n                        <div class=\"col\">\r\n                            <h7>10 or more player entries</h7>\r\n                            <ul>\r\n                                <li>1st: $2.50 minimum + split pot</li>\r\n                                <li>2nd: $2.00 minimum + split pot</li>\r\n                                <li>3rd: $1.50 minimum + split pot</li>\r\n                                <li>4th: $1.00 minimum + split pot</li>\r\n                                <li>5th: $0.50 minimum + split pot</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <table class=\"table\">\r\n                        <tbody>\r\n                            <tr>\r\n                            <td>\r\n                                <div id=\"sauce\" className=\"games\">\r\n                                    <Link to=\"/sauceone\"><img src=\"..\\images\\Icon.PNG\" alt=\"play the game\" width=\"150px\"></img>\r\n                                    <h3 className=\"gameLabel\">Hot Sauce Fury</h3></Link>\r\n                                </div>\r\n                            </td>\r\n                            <td>\r\n                                <div id=\"sauce\" className=\"games\">\r\n                                    <Link to=\"/pongone\"><img src=\"..\\images\\pong_icon.PNG\" alt=\"play the game\" width=\"150px\"></img>\r\n                                    <h3 className=\"gameLabel\">Crazy Pong</h3></Link>\r\n                                </div>\r\n                            </td>\r\n                            </tr>\r\n                            <tr>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default OneDollar;","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\OneCentGames.js",[],"C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\FreeGames.js",[],"C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\Nav.js",[],"C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\Home.js",[],"C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\Sidebar.js",[],"C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\Dashboard.js",["184","185"],"C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\Login.js",[],"C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\utils\\Common.js",["186","187"],"// return the user data from the session storage\r\nexport const getUser = () => {\r\n    const userStr = sessionStorage.getItem('user');\r\n    if (userStr) return JSON.parse(userStr);\r\n    else return null;\r\n}\r\n\r\n// return the token from the session storage\r\nexport const getToken = () => {\r\n    return sessionStorage.getItem('token') || null;\r\n}\r\n\r\nexport const getTokenForGame = () => {\r\n    return sessionStorage.getItem('token') || null || alert(\"Please Login\");\r\n}\r\n\r\n// remove the token and user from the session storage\r\nexport const removeUserSession = () => {\r\n    sessionStorage.removeItem('token');\r\n    sessionStorage.removeItem('user');\r\n    sessionStorage.removeItem('balance');\r\n    document.cookie = \"user=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\r\n    document.cookie = \"pass=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\r\n}\r\n\r\n// set the token and user from the session storage\r\nexport const setUserSession = (token, user, pass) => {\r\n    sessionStorage.setItem('token', token);\r\n    sessionStorage.setItem('user', JSON.stringify(user));\r\n    function createUserCookie(key, value) {\r\n        let cookie = escape(key) + \"=\" + escape(value) + \";\" + \"path=/\";\r\n        document.cookie = cookie;\r\n    }\r\n    user = JSON.stringify(user);\r\n    user = user.replace(/[{(\"\")}]/g, '')\r\n    createUserCookie('user', user);\r\n    function createPassCookie(key, value) {\r\n        let cookie = escape(key) + \"=\" + escape(value) + \";\" + \"path=/\";\r\n        document.cookie = cookie;\r\n    }\r\n    pass = JSON.stringify(pass);\r\n    pass = pass.replace(/[{(\"\")}]/g, '')\r\n    createPassCookie('pass', pass);\r\n}","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\utils\\PublicRoute.js",[],"C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\utils\\PrivateRoute.js",[],"C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\RegisterUser.js",[],"C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\utils\\PrivateOneCent.js",[],"C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\HotSauceComponents\\HotSauce01.js",["188","189","190"],"import React, { useState, useEffect} from \"react\";\r\nimport '../../utils/TemplateData/style.css'\r\nimport Unity, { UnityContext } from \"react-unity-webgl\";\r\nimport {PlayFabClient} from 'playfab-sdk';\r\n\r\nlet unityContext = new UnityContext({\r\n  codeUrl: \"/games/HotSauce/Build/HotSauce Fury Web.wasm.unityweb\",\r\n  loaderUrl: \"/games/HotSauce/Build/HotSauce Fury Web.loader.js\",\r\n  frameworkUrl: \"/games/HotSauce/Build/HotSauce Fury Web.framework.js.unityweb\",\r\n  dataUrl: \"/games/HotSauce/Build/HotSauce Fury Web.data.unityweb\",\r\n});\r\n\r\nexport default function HotSauce01(props) {\r\n  const [progression, setProgression] = useState(0);\r\n  const [leaders, setLeaderboard] = useState([]);\r\n  const [balance1, setBalance] = useState('');\r\n  useEffect(()=>{\r\n    getBalance();\r\n    getLeaderboard()\r\n    launchGame();\r\n    }, [])\r\n\r\n  unityContext.on(\"progress\", progressionVal => {\r\n    setProgression(progressionVal * 100);\r\n    console.log(progression);\r\n    });\r\n  unityContext.on('loaded', () => {\r\n    console.log('Done Loading!');\r\n  });\r\n  unityContext.on('receiveMessageFromUnity',  async function receiveMessageFromUnity(txt) {\r\n    // Get element to assign the message\r\n    const finalScore = txt;\r\n    console.log(\"final\" + \" \" + finalScore)\r\n  \r\n    await new Promise(resolve => setTimeout(resolve, 2000));\r\n    var statisticsUpdate = \r\n      {\r\n          PlayFabId: \"1DF75\",\r\n          Statistics:[\r\n          {\r\n            StatisticName: \"HotSauceDaily\",\r\n            Value: finalScore\r\n          }\r\n        ]\r\n      }\r\n      PlayFabClient.UpdatePlayerStatistics(statisticsUpdate, function (error, result)\r\n      {\r\n        if (result != null){\r\n          var subtractCurrency = {\r\n            Amount: 1,\r\n            VirtualCurrency: \"US\"\r\n          }\r\n          PlayFabClient.SubtractUserVirtualCurrency(subtractCurrency, function (error, result){\r\n            sessionStorage.setItem(\"balance\", (balance1 - .01).toFixed(2));\r\n          })\r\n          console.log(\"Leaderboard Updated!\")}\r\n          else if (result == null) {\r\n            alert(\"Something went wrong sending the leaderboard, please contact us\")\r\n          }\r\n        })\r\n        alert(\"Play again to improve your score or play another game! Scores will be reset tomorrow.\")\r\n        props.history.push('/onecent');\r\n    }\r\n  );\r\n\r\n  const onFullScreen = () => {\r\n    unityContext.setFullscreen(true);\r\n    };\r\n    var balance;\r\n\r\n    const getBalance = async () => {\r\n      balance = sessionStorage.balance;\r\n      setBalance(balance)\r\n    }\r\n    \r\n    const launchGame = async () => {\r\n      await new Promise(resolve => setTimeout(resolve, 500));\r\n        if (balance <= .01 ){\r\n            alert(\"Your account is inneficient, please deposit additional funds\")\r\n            props.history.push('/onecent');\r\n        }\r\n        else {\r\n          verifyPayment();\r\n        }\r\n      }\r\n      \r\n      const verifyPayment = async () => {\r\n        await new Promise(resolve => setTimeout(resolve, 1000));\r\n        if (window.confirm(\"Please confirm 1¢ charge to your account to enter this tournament! You will only be charged if you finish the game and your score is sent to the leaderboard\") == false)\r\n        {\r\n          props.history.push('/onecent');\r\n        }\r\n      }\r\n\r\n      async function getLeaderboard(){\r\n        await new Promise(resolve => setTimeout(resolve, 1500));\r\n        var leaderboard = {\r\n                StartPosition: 0,\r\n                StatisticName: \"HotSauceDaily\",\r\n                MaxResultsCount: 50\r\n            };\r\n        PlayFabClient.GetLeaderboard(leaderboard, function (error, result)\r\n                {\r\n                    setLeaderboard(result.data.Leaderboard);\r\n                    console.log(leaders)\r\n                });\r\n            }\r\n    \r\n      return (\r\n        <main>\r\n            <header>\r\n                { balance !== null && (\r\n                    <div className=\"balance\">\r\n                        <span className=\"balance1\">Balance: ${balance1}</span>\r\n                    </div>\r\n                    )\r\n                }\r\n                { balance === null && (\r\n                    <div className=\"balance\">\r\n                        <span className=\"balance1\">Not Logged In</span> <br></br>\r\n                        <span className=\"balance1\">Balance: $0</span>\r\n                    </div>\r\n                    )\r\n                }\r\n            </header>\r\n            <div class=\"row\">\r\n                <div className=\"col-1\">\r\n                    <h2 className=\"title\">Leaderboard</h2>\r\n                </div>\r\n                <div className=\"col-8\">\r\n                    <h1 className=\"title\">Hot Sauce Fury!</h1>\r\n                </div>\r\n                <div className=\"col-4\"></div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-2\">\r\n                  <ol className=\"leaderboardList\">\r\n                      {leaders.map((leaderMapped, index) => (\r\n                          <li key={`${leaderMapped.DisplayName}_${leaderMapped.StatValue}`} className=\"leaderboardItem\">{leaderMapped.DisplayName}: {leaderMapped.StatValue}</li>\r\n                      ))}\r\n                  </ol>\r\n                </div>\r\n                <div className=\"col-7\">\r\n            <div id=\"unity-container\" class=\"unity-desktop\">\r\n                <Unity unityContext={unityContext} width=\"960px\" height=\"600px\"/>\r\n                <div id=\"unity-loading-bar\">\r\n                    <div id=\"unity-logo\"></div>\r\n                    <div id=\"unity-progress-bar-empty\">\r\n                    <div id=\"unity-progress-bar-full\"></div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"unity-footer\">\r\n                <button id=\"unity-fullscreen-button\" onClick={onFullScreen}></button>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            </div>\r\n            <div className=\"col-3\"></div>\r\n        </main>\r\n    ) ;\r\n}","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\HotSauceComponents\\HotSauce5.js",["191","192","193"],"import React, { useState, useEffect} from \"react\";\r\nimport '../../utils/TemplateData/style.css'\r\nimport Unity, { UnityContext } from \"react-unity-webgl\";\r\nimport {PlayFabClient} from 'playfab-sdk';\r\n\r\nlet unityContext = new UnityContext({\r\n  codeUrl: \"/games/HotSauce/Build/HotSauce Fury Web.wasm.unityweb\",\r\n  loaderUrl: \"/games/HotSauce/Build/HotSauce Fury Web.loader.js\",\r\n  frameworkUrl: \"/games/HotSauce/Build/HotSauce Fury Web.framework.js.unityweb\",\r\n  dataUrl: \"/games/HotSauce/Build/HotSauce Fury Web.data.unityweb\",\r\n});\r\n\r\nexport default function HotSauce5(props) {\r\n  const [progression, setProgression] = useState(0);\r\n  const [leaders, setLeaderboard] = useState([]);\r\n  const [balance1, setBalance] = useState('');\r\n  useEffect(()=>{\r\n    getBalance();\r\n    getLeaderboard()\r\n    launchGame();\r\n    }, [])\r\n\r\n  unityContext.on(\"progress\", progressionVal => {\r\n    setProgression(progressionVal * 100);\r\n    console.log(progression);\r\n    });\r\n  unityContext.on('loaded', () => {\r\n    console.log('Done Loading!');\r\n  });\r\n  unityContext.on('receiveMessageFromUnity',  async function receiveMessageFromUnity(txt) {\r\n    // Get element to assign the message\r\n    const finalScore = txt;\r\n    console.log(\"final\" + \" \" + finalScore)\r\n  \r\n    await new Promise(resolve => setTimeout(resolve, 2000));\r\n    var statisticsUpdate = \r\n      {\r\n          PlayFabId: \"1DF75\",\r\n          Statistics:[\r\n          {\r\n            StatisticName: \"HotSauceDaily5\",\r\n            Value: finalScore\r\n          }\r\n        ]\r\n      }\r\n      PlayFabClient.UpdatePlayerStatistics(statisticsUpdate, function (error, result)\r\n      {\r\n        if (result != null){\r\n          var subtractCurrency = {\r\n            Amount: 500,\r\n            VirtualCurrency: \"US\"\r\n          }\r\n          PlayFabClient.SubtractUserVirtualCurrency(subtractCurrency, function (error, result){\r\n            sessionStorage.setItem(\"balance\", (balance1 - 5).toFixed(2));\r\n          })\r\n          console.log(\"Leaderboard Updated!\")}\r\n          else if (result == null) {\r\n            alert(\"Something went wrong sending the leaderboard, please contact us\")\r\n          }\r\n        })\r\n        alert(\"Play again to improve your score or play another game! Scores will be reset tomorrow.\")\r\n        props.history.push('/fivedollar');\r\n    }\r\n  );\r\n\r\n  const onFullScreen = () => {\r\n    unityContext.setFullscreen(true);\r\n    };\r\n    var balance;\r\n\r\n    const getBalance = async () => {\r\n        balance = sessionStorage.balance;\r\n        setBalance(balance)\r\n    }\r\n    \r\n    const launchGame = async () => {\r\n      await new Promise(resolve => setTimeout(resolve, 500));\r\n        if (balance <= 5 ){\r\n            alert(\"Your account is inneficient, please deposit additional funds\")\r\n            props.history.push('/fivedollar');\r\n        }\r\n        else {\r\n          verifyPayment();\r\n        }\r\n      }\r\n      \r\n      const verifyPayment = async () => {\r\n        await new Promise(resolve => setTimeout(resolve, 1000));\r\n        if (window.confirm(\"Please confirm $5 charge to your account to enter this tournament! You will only be charged if you finish the game and your score is sent to the leaderboard\") == false)\r\n        {\r\n          props.history.push('/fivedollar');\r\n        }\r\n      }\r\n\r\n      async function getLeaderboard(){\r\n        await new Promise(resolve => setTimeout(resolve, 1500));\r\n        var leaderboard = {\r\n                StartPosition: 0,\r\n                StatisticName: \"HotSauceDaily5\",\r\n                MaxResultsCount: 50\r\n            };\r\n        PlayFabClient.GetLeaderboard(leaderboard, function (error, result)\r\n                {\r\n                    setLeaderboard(result.data.Leaderboard);\r\n                    console.log(leaders)\r\n                });\r\n            }\r\n    \r\n    return (\r\n        <main>\r\n            <header>\r\n                { balance !== null && (\r\n                    <div className=\"balance\">\r\n                        <span className=\"balance1\">Balance: ${balance1}</span>\r\n                    </div>\r\n                    )\r\n                }\r\n                { balance === null && (\r\n                    <div className=\"balance\">\r\n                        <span className=\"balance1\">Not Logged In</span> <br></br>\r\n                        <span className=\"balance1\">Balance: $0</span>\r\n                    </div>\r\n                    )\r\n                }\r\n            </header>\r\n            <div class=\"row\">\r\n                <div className=\"col-1\">\r\n                    <h2 className=\"title\">Leaderboard</h2>\r\n                </div>\r\n                <div className=\"col-8\">\r\n                    <h1 className=\"title\">Hot Sauce Fury!</h1>\r\n                </div>\r\n                <div className=\"col-4\"></div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-2\">\r\n                    <ol className=\"leaderboardList\">\r\n                        {leaders.map((leaderMapped, index) => (\r\n                            <li key={`${leaderMapped.DisplayName}_${leaderMapped.StatValue}`} className=\"leaderboardItem\">{leaderMapped.DisplayName}: {leaderMapped.StatValue}</li>\r\n                        ))}\r\n                    </ol>\r\n                </div>\r\n                <div className=\"col-7\">\r\n            <div id=\"unity-container\" class=\"unity-desktop\">\r\n                <Unity unityContext={unityContext} width=\"960px\" height=\"600px\"/>\r\n                <div id=\"unity-loading-bar\">\r\n                    <div id=\"unity-logo\"></div>\r\n                    <div id=\"unity-progress-bar-empty\">\r\n                    <div id=\"unity-progress-bar-full\"></div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"unity-footer\">\r\n                <button id=\"unity-fullscreen-button\" onClick={onFullScreen}></button>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            </div>\r\n            <div className=\"col-3\"></div>\r\n        </main>\r\n    ) ;\r\n}","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\HotSauceComponents\\HotSauce50.js",["194","195","196"],"import React, { useState, useEffect} from \"react\";\r\nimport '../../utils/TemplateData/style.css'\r\nimport Unity, { UnityContext } from \"react-unity-webgl\";\r\nimport {PlayFabClient} from 'playfab-sdk';\r\n\r\nlet unityContext = new UnityContext({\r\n  codeUrl: \"/games/HotSauce/Build/HotSauce Fury Web.wasm.unityweb\",\r\n  loaderUrl: \"/games/HotSauce/Build/HotSauce Fury Web.loader.js\",\r\n  frameworkUrl: \"/games/HotSauce/Build/HotSauce Fury Web.framework.js.unityweb\",\r\n  dataUrl: \"/games/HotSauce/Build/HotSauce Fury Web.data.unityweb\",\r\n});\r\n\r\nexport default function HotSauce50(props) {\r\n    const [progression, setProgression] = useState(0);\r\n    const [leaders, setLeaderboard] = useState([]);\r\n    const [balance1, setBalance] = useState('');\r\n    useEffect(()=>{\r\n        getBalance();\r\n        getLeaderboard()\r\n        launchGame();\r\n    }, [])\r\n\r\n  unityContext.on(\"progress\", progressionVal => {\r\n    setProgression(progressionVal * 100);\r\n    console.log(progression);\r\n    });\r\n  unityContext.on('loaded', () => {\r\n    console.log('Done Loading!');\r\n  });\r\n  unityContext.on('receiveMessageFromUnity',  async function receiveMessageFromUnity(txt) {\r\n    // Get element to assign the message\r\n    const finalScore = txt;\r\n    console.log(\"final\" + \" \" + finalScore)\r\n  \r\n    await new Promise(resolve => setTimeout(resolve, 2000));\r\n    var statisticsUpdate = \r\n      {\r\n          PlayFabId: \"1DF75\",\r\n          Statistics:[\r\n          {\r\n            StatisticName: \"HotSauceDaily.50\",\r\n            Value: finalScore\r\n          }\r\n        ]\r\n      }\r\n      PlayFabClient.UpdatePlayerStatistics(statisticsUpdate, function (error, result)\r\n      {\r\n        if (result != null){\r\n          var subtractCurrency = {\r\n            Amount: 50,\r\n            VirtualCurrency: \"US\"\r\n          }\r\n          PlayFabClient.SubtractUserVirtualCurrency(subtractCurrency, function (error, result){\r\n            sessionStorage.setItem(\"balance\", (balance1 - .50).toFixed(2));\r\n          })\r\n          console.log(\"Leaderboard Updated!\")}\r\n          else if (result == null) {\r\n            alert(\"Something went wrong sending the leaderboard, please contact us\")\r\n          }\r\n        })\r\n        alert(\"Play again to improve your score or play another game! Scores will be reset tomorrow.\")\r\n        props.history.push('/fiftycent');\r\n    }\r\n  );\r\n\r\n  const onFullScreen = () => {\r\n    unityContext.setFullscreen(true);\r\n    };\r\n    var balance;\r\n\r\n    const getBalance = async () => {\r\n      balance = sessionStorage.balance;\r\n      setBalance(balance)\r\n    }\r\n    \r\n    const launchGame = async () => {\r\n      await new Promise(resolve => setTimeout(resolve, 500));\r\n        if (balance <= .50 ){\r\n            alert(\"Your account is inneficient, please deposit additional funds\")\r\n            props.history.push('/fiftycent');\r\n        }\r\n        else {\r\n          verifyPayment();\r\n        }\r\n      }\r\n      \r\n      const verifyPayment = async () => {\r\n        await new Promise(resolve => setTimeout(resolve, 1000));\r\n        if (window.confirm(\"Please confirm 50¢ charge to your account to enter this tournament! You will only be charged if you finish the game and your score is sent to the leaderboard\") == false)\r\n        {\r\n          props.history.push('/fiftycent');\r\n        }\r\n      }\r\n\r\n      async function getLeaderboard(){\r\n        await new Promise(resolve => setTimeout(resolve, 1500));\r\n        var leaderboard = {\r\n                StartPosition: 0,\r\n                StatisticName: \"HotSauceDaily.50\",\r\n                MaxResultsCount: 50\r\n            };\r\n        PlayFabClient.GetLeaderboard(leaderboard, function (error, result)\r\n                {\r\n                    setLeaderboard(result.data.Leaderboard);\r\n                    console.log(leaders)\r\n                });\r\n            }\r\n    \r\n    return (\r\n        <main>\r\n            <header>\r\n                { balance !== null && (\r\n                    <div className=\"balance\">\r\n                        <span className=\"balance1\">Balance: ${balance1}</span>\r\n                    </div>\r\n                    )\r\n                }\r\n                { balance === null && (\r\n                    <div className=\"balance\">\r\n                        <span className=\"balance1\">Not Logged In</span> <br></br>\r\n                        <span className=\"balance1\">Balance: $0</span>\r\n                    </div>\r\n                    )\r\n                }\r\n            </header>\r\n            <div class=\"row\">\r\n                <div className=\"col-1\">\r\n                    <h2 className=\"title\">Leaderboard</h2>\r\n                </div>\r\n                <div className=\"col-8\">\r\n                    <h1 className=\"title\">Hot Sauce Fury!</h1>\r\n                </div>\r\n                <div className=\"col-4\"></div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-2\">\r\n                    <ol className=\"leaderboardList\">\r\n                        {leaders.map((leaderMapped, index) => (\r\n                            <li key={`${leaderMapped.DisplayName}_${leaderMapped.StatValue}`} className=\"leaderboardItem\">{leaderMapped.DisplayName}: {leaderMapped.StatValue}</li>\r\n                        ))}\r\n                    </ol>\r\n                </div>\r\n                <div className=\"col-7\">\r\n            <div id=\"unity-container\" class=\"unity-desktop\">\r\n                <Unity unityContext={unityContext} width=\"960px\" height=\"600px\"/>\r\n                <div id=\"unity-loading-bar\">\r\n                    <div id=\"unity-logo\"></div>\r\n                    <div id=\"unity-progress-bar-empty\">\r\n                    <div id=\"unity-progress-bar-full\"></div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"unity-footer\">\r\n                <button id=\"unity-fullscreen-button\" onClick={onFullScreen}></button>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            </div>\r\n            <div className=\"col-3\"></div>\r\n        </main>\r\n    ) ;\r\n}","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\HotSauceComponents\\HotSauce1.js",["197","198","199"],"import React, { useState, useEffect} from \"react\";\r\nimport '../../utils/TemplateData/style.css'\r\nimport Unity, { UnityContext } from \"react-unity-webgl\";\r\nimport {PlayFabClient} from 'playfab-sdk';\r\n\r\nlet unityContext = new UnityContext({\r\n  codeUrl: \"/games/HotSauce/Build/HotSauce Fury Web.wasm.unityweb\",\r\n  loaderUrl: \"/games/HotSauce/Build/HotSauce Fury Web.loader.js\",\r\n  frameworkUrl: \"/games/HotSauce/Build/HotSauce Fury Web.framework.js.unityweb\",\r\n  dataUrl: \"/games/HotSauce/Build/HotSauce Fury Web.data.unityweb\",\r\n});\r\n\r\nexport default function HotSauce1(props) {\r\n  const [progression, setProgression] = useState(0);\r\n  const [leaders, setLeaderboard] = useState([]);\r\n  const [balance1, setBalance] = useState('');\r\n\r\n  useEffect(()=>{\r\n    getBalance();\r\n    getLeaderboard();\r\n    launchGame();\r\n    }, [])\r\n\r\n  unityContext.on(\"progress\", progressionVal => {\r\n    setProgression(progressionVal * 100);\r\n    console.log(progression);\r\n    });\r\n  unityContext.on('loaded', () => {\r\n    console.log('Done Loading!');\r\n  });\r\n  unityContext.on('receiveMessageFromUnity',  async function receiveMessageFromUnity(txt) {\r\n    // Get element to assign the message\r\n    const finalScore = txt;\r\n    console.log(\"final\" + \" \" + finalScore)\r\n  \r\n    await new Promise(resolve => setTimeout(resolve, 2000));\r\n    var statisticsUpdate = \r\n      {\r\n          PlayFabId: \"1DF75\",\r\n          Statistics:[\r\n          {\r\n            StatisticName: \"HotSauceDaily1\",\r\n            Value: finalScore\r\n          }\r\n        ]\r\n      }\r\n      PlayFabClient.UpdatePlayerStatistics(statisticsUpdate, function (error, result)\r\n      {\r\n        if (result != null){\r\n          var subtractCurrency = {\r\n            Amount: 100,\r\n            VirtualCurrency: \"US\"\r\n          }\r\n          PlayFabClient.SubtractUserVirtualCurrency(subtractCurrency, function (error, result){\r\n            sessionStorage.setItem(\"balance\", (balance1 - 1).toFixed(2));\r\n          })\r\n          console.log(\"Leaderboard Updated!\")}\r\n          else if (result == null) {\r\n            alert(\"Something went wrong sending the leaderboard, please contact us\")\r\n          }\r\n        })\r\n        alert(\"Play again to improve your score or play another game! Scores will be reset tomorrow.\")\r\n        props.history.push('/onedollar');\r\n    }\r\n  );\r\n\r\n  const onFullScreen = () => {\r\n    unityContext.setFullscreen(true);\r\n    };\r\n    var balance;\r\n\r\n    const getBalance = async () => {\r\n        balance = sessionStorage.balance;\r\n        setBalance(balance)\r\n    }\r\n    \r\n    const launchGame = async () => {\r\n      await new Promise(resolve => setTimeout(resolve, 500));\r\n        if (balance <= 1 ){\r\n            alert(\"Your account is inneficient, please deposit additional funds\")\r\n            props.history.push('/onedollar');\r\n        }\r\n        else {\r\n          verifyPayment();\r\n        }\r\n      }\r\n      \r\n      const verifyPayment = async () => {\r\n        await new Promise(resolve => setTimeout(resolve, 1000));\r\n        if (window.confirm(\"Please confirm $1 charge to your account to enter this tournament! You will only be charged if you finish the game and your score is sent to the leaderboard\") == false)\r\n        {\r\n          props.history.push('/onedollar');\r\n        }\r\n      }\r\n\r\n    async function getLeaderboard(){\r\n        await new Promise(resolve => setTimeout(resolve, 1500));\r\n        var leaderboard = {\r\n                StartPosition: 0,\r\n                StatisticName: \"HotSauceDaily1\",\r\n                MaxResultsCount: 50\r\n            };\r\n        PlayFabClient.GetLeaderboard(leaderboard, function (error, result)\r\n                {\r\n                    setLeaderboard(result.data.Leaderboard);\r\n                    console.log(leaders)\r\n                });\r\n            }\r\n    \r\n    return (\r\n            <main>\r\n                <header>\r\n                { balance !== null && (\r\n                    <div className=\"balance\">\r\n                        <span className=\"balance1\">Balance: ${balance1}</span>\r\n                    </div>\r\n                    )\r\n                }\r\n                { balance === null && (\r\n                    <div className=\"balance\">\r\n                        <span className=\"balance1\">Not Logged In</span> <br></br>\r\n                        <span className=\"balance1\">Balance: $0</span>\r\n                    </div>\r\n                    )\r\n                }\r\n            </header>\r\n                <div class=\"row\">\r\n                    <div className=\"col-1\">\r\n                        <h2 className=\"title\">Leaderboard</h2>\r\n                    </div>\r\n                    <div className=\"col-8\">\r\n                        <h1 className=\"title\">Hot Sauce Fury!</h1>\r\n                    </div>\r\n                    <div className=\"col-4\"></div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-2\">\r\n                        <ol className=\"leaderboardList\">\r\n                            {leaders.map((leaderMapped, index) => (\r\n                                <li key={`${leaderMapped.DisplayName}_${leaderMapped.StatValue}`} className=\"leaderboardItem\">{leaderMapped.DisplayName}: {leaderMapped.StatValue}</li>\r\n                            ))}\r\n                        </ol>\r\n                    </div>\r\n                    <div className=\"col-7\">\r\n                <div id=\"unity-container\" class=\"unity-desktop\">\r\n                    <Unity unityContext={unityContext} width=\"960px\" height=\"600px\"/>\r\n                    <div id=\"unity-loading-bar\">\r\n                        <div id=\"unity-logo\"></div>\r\n                        <div id=\"unity-progress-bar-empty\">\r\n                        <div id=\"unity-progress-bar-full\"></div>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"unity-footer\">\r\n                        <button id=\"unity-fullscreen-button\" onClick={onFullScreen}></button>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                </div>\r\n                <div className=\"col-3\"></div>\r\n            </main>\r\n        ) ;\r\n    }","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\HotSauceComponents\\HotSauce05.js",["200","201","202"],"import React, { useState, useEffect} from \"react\";\r\nimport '../../utils/TemplateData/style.css'\r\nimport Unity, { UnityContext } from \"react-unity-webgl\";\r\nimport {PlayFabClient} from 'playfab-sdk';\r\n\r\nlet unityContext = new UnityContext({\r\n  codeUrl: \"/games/HotSauce/Build/HotSauce Fury Web.wasm.unityweb\",\r\n  loaderUrl: \"/games/HotSauce/Build/HotSauce Fury Web.loader.js\",\r\n  frameworkUrl: \"/games/HotSauce/Build/HotSauce Fury Web.framework.js.unityweb\",\r\n  dataUrl: \"/games/HotSauce/Build/HotSauce Fury Web.data.unityweb\",\r\n});\r\n\r\nexport default function HotSauce05(props) {\r\n  const [progression, setProgression] = useState(0);\r\n  const [leaders, setLeaderboard] = useState([]);\r\n  const [balance1, setBalance] = useState('');\r\n  useEffect(()=>{\r\n    getBalance();\r\n    getLeaderboard()\r\n    launchGame();\r\n    }, [])\r\n\r\n  unityContext.on(\"progress\", progressionVal => {\r\n    setProgression(progressionVal * 100);\r\n    console.log(progression);\r\n    });\r\n  unityContext.on('loaded', () => {\r\n    console.log('Done Loading!');\r\n  });\r\n  unityContext.on('receiveMessageFromUnity',  async function receiveMessageFromUnity(txt) {\r\n    // Get element to assign the message\r\n    const finalScore = txt;\r\n    console.log(\"final\" + \" \" + finalScore)\r\n  \r\n    await new Promise(resolve => setTimeout(resolve, 2000));\r\n    var statisticsUpdate = \r\n      {\r\n          PlayFabId: \"1DF75\",\r\n          Statistics:[\r\n          {\r\n            StatisticName: \"HotSauceDaily.05\",\r\n            Value: finalScore\r\n          }\r\n        ]\r\n      }\r\n      PlayFabClient.UpdatePlayerStatistics(statisticsUpdate, function (error, result)\r\n      {\r\n        if (result != null){\r\n          var subtractCurrency = {\r\n            Amount: 5,\r\n            VirtualCurrency: \"US\"\r\n          }\r\n          PlayFabClient.SubtractUserVirtualCurrency(subtractCurrency, function (error, result){\r\n            sessionStorage.setItem(\"balance\", (balance1 - .05).toFixed(2));\r\n          })\r\n          console.log(\"Leaderboard Updated!\")}\r\n          else if (result == null) {\r\n            alert(\"Something went wrong sending the leaderboard, please contact us\")\r\n          }\r\n        })\r\n        alert(\"Play again to improve your score or play another game! Scores will be reset tomorrow.\")\r\n        props.history.push('/fiftycent');\r\n    }\r\n  );\r\n\r\n    const onFullScreen = () => {\r\n        unityContext.setFullscreen(true);\r\n        };\r\n    var balance;\r\n\r\n    const getBalance = async () => {\r\n        balance = sessionStorage.balance;\r\n        setBalance(balance)\r\n    }\r\n    \r\n    const launchGame = async () => {\r\n      await new Promise(resolve => setTimeout(resolve, 500));\r\n        if (balance <= .05 ){\r\n            alert(\"Your account is inneficient, please deposit additional funds\")\r\n            props.history.push('/fivecent');\r\n        }\r\n        else {\r\n          verifyPayment();\r\n        }\r\n      }\r\n      \r\n      const verifyPayment = async () => {\r\n        await new Promise(resolve => setTimeout(resolve, 1000));\r\n        if (window.confirm(\"Please confirm 5¢ charge to your account to enter this tournament! You will only be charged if you finish the game and your score is sent to the leaderboard\") == false)\r\n        {\r\n          props.history.push('/fivecent');\r\n        }\r\n      }\r\n\r\n      async function getLeaderboard(){\r\n        await new Promise(resolve => setTimeout(resolve, 1500));\r\n        var leaderboard = {\r\n                StartPosition: 0,\r\n                StatisticName: \"HotSauceDaily.05\",\r\n                MaxResultsCount: 50\r\n            };\r\n        PlayFabClient.GetLeaderboard(leaderboard, function (error, result)\r\n                {\r\n                    setLeaderboard(result.data.Leaderboard);\r\n                    console.log(leaders)\r\n                });\r\n            }\r\n    \r\n    return (\r\n        <main>\r\n            <header>\r\n                { balance !== null && (\r\n                    <div className=\"balance\">\r\n                        <span className=\"balance1\">Balance: ${balance1}</span>\r\n                    </div>\r\n                    )\r\n                }\r\n                { balance === null && (\r\n                    <div className=\"balance\">\r\n                        <span className=\"balance1\">Not Logged In</span> <br></br>\r\n                        <span className=\"balance1\">Balance: $0</span>\r\n                    </div>\r\n                    )\r\n                }\r\n            </header>\r\n            <div class=\"row\">\r\n                <div className=\"col-1\">\r\n                    <h2 className=\"title\">Leaderboard</h2>\r\n                </div>\r\n                <div className=\"col-8\">\r\n                    <h1 className=\"title\">Hot Sauce Fury!</h1>\r\n                </div>\r\n                <div className=\"col-4\"></div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-2\">\r\n                    <ol className=\"leaderboardList\">\r\n                        {leaders.map((leaderMapped, index) => (\r\n                            <li key={`${leaderMapped.DisplayName}_${leaderMapped.StatValue}`} className=\"leaderboardItem\">{leaderMapped.DisplayName}: {leaderMapped.StatValue}</li>\r\n                        ))}\r\n                    </ol>\r\n                </div>\r\n                <div className=\"col-7\">\r\n            <div id=\"unity-container\" class=\"unity-desktop\">\r\n                <Unity unityContext={unityContext} width=\"1020px\" height=\"600px\"/>\r\n                <div id=\"unity-loading-bar\">\r\n                    <div id=\"unity-logo\"></div>\r\n                    <div id=\"unity-progress-bar-empty\">\r\n                    <div id=\"unity-progress-bar-full\"></div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"unity-footer\">\r\n                <button id=\"unity-fullscreen-button\" onClick={onFullScreen}></button>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            </div>\r\n            <div className=\"col-3\"></div>\r\n        </main>\r\n    ) ;\r\n}","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\HotSauceComponents\\HotSauceFree.js",["203"],"import React, { useState, useEffect }from 'react';\r\nimport '../../utils/TemplateData/style.css'\r\nimport Unity, { UnityContext } from \"react-unity-webgl\";\r\n\r\nlet unityContext = new UnityContext({\r\n    codeUrl: \"/games/HotSauce/Build/HotSauce Fury Web.wasm.unityweb\",\r\n    loaderUrl: \"/games/HotSauce/Build/HotSauce Fury Web.loader.js\",\r\n    frameworkUrl: \"/games/HotSauce/Build/HotSauce Fury Web.framework.js.unityweb\",\r\n    dataUrl: \"/games/HotSauce/Build/HotSauce Fury Web.data.unityweb\",\r\n});\r\n\r\nexport default function HotSauceFree(props) {\r\n    const [balance, setBalance] = useState('');\r\n\r\n    useEffect(() => {\r\n        getBalance();\r\n    })\r\n\r\n    const getBalance = async () => {\r\n        if (sessionStorage.getItem(\"balance\")) {\r\n            setBalance(sessionStorage.balance);\r\n            console.log(balance)\r\n        }\r\n        else {\r\n            setBalance(null);\r\n            console.log(balance)\r\n        }\r\n    }\r\n    const [progression, setProgression] = useState(0);\r\n\r\n    unityContext.on(\"progress\", progressionVal => {\r\n        setProgression(progressionVal * 100);\r\n        console.log(progression);\r\n        });\r\n    unityContext.on('loaded', () => {\r\n        console.log('Done Loading!');\r\n    });\r\n    unityContext.on('receiveMessageFromUnity',  async function receiveMessageFromUnity(txt) {\r\n        // Get element to assign the message\r\n        const finalScore = txt;\r\n        console.log(\"final\" + \" \" + finalScore)\r\n\r\n        await new Promise(resolve => setTimeout(resolve, 1000));\r\n        alert(\"Play again or play another game!\")\r\n        props.history.push('/free');\r\n    });\r\n\r\n    const onFullScreen = () => {\r\n        unityContext.setFullscreen(true);\r\n    };\r\n    \r\n    return (\r\n        <main>\r\n            <header>\r\n                { balance !== null && (\r\n                    <div className=\"balance\">\r\n                        <span className=\"balance1\">Balance: ${balance}</span>\r\n                    </div>\r\n                    )\r\n                }\r\n                { balance === null && (\r\n                    <div className=\"balance\">\r\n                        <span className=\"balance1\">Not Logged In</span> <br></br>\r\n                        <span className=\"balance1\">Balance: $0</span>\r\n                    </div>\r\n                    )\r\n                }\r\n            </header>\r\n            <div class=\"row\">\r\n                <div className=\"col-3\">\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <h1 className=\"title\">Hot Sauce Fury!</h1>\r\n                </div>\r\n                <div className=\"col-3\"></div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\"></div>\r\n                <div className=\"col-6\">\r\n            <div id=\"unity-container\" class=\"unity-desktop\">\r\n                <Unity unityContext={unityContext} width=\"960px\" height=\"600px\"/>\r\n                <div id=\"unity-loading-bar\">\r\n                    <div id=\"unity-logo\"></div>\r\n                    <div id=\"unity-progress-bar-empty\">\r\n                    <div id=\"unity-progress-bar-full\"></div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"unity-footer\">\r\n                <button id=\"unity-fullscreen-button\" onClick={onFullScreen}></button>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            </div>\r\n            <div className=\"col-3\"></div>\r\n        </main>\r\n    ) ;\r\n}","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\utils\\PrivateFiveCent.js",[],"C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\utils\\PrivateFiftyCent.js",[],"C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\utils\\PrivateOneDollar.js",[],"C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\utils\\PrivateFiveDollar.js",[],"C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\SpaceShooterComponents\\SpaceShooterFree.js",[],"C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\Balance.js",[],["204","205"],"C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\CrazyPongComponents\\CrazyPong01.js",["206","207","208"],"import React, { useState, useEffect} from \"react\";\r\nimport '../../utils/TemplateData/style.css'\r\nimport Unity, { UnityContext } from \"react-unity-webgl\";\r\nimport {PlayFabClient} from 'playfab-sdk';\r\n\r\nlet unityContext = new UnityContext({\r\n  codeUrl: \"/games/CrazyPong/Build/Crazy_Pong Web.wasm.unityweb\",\r\n  loaderUrl: \"/games/CrazyPong/Build/Crazy_Pong Web.loader.js\",\r\n  frameworkUrl: \"/games/CrazyPong/Build/Crazy_Pong Web.framework.js.unityweb\",\r\n  dataUrl: \"/games/CrazyPong/Build/Crazy_Pong Web.data.unityweb\",\r\n});\r\n\r\nexport default function CrazyPong01(props) {\r\n  const [progression, setProgression] = useState(0);\r\n  const [leaders, setLeaderboard] = useState([]);\r\n  const [balance1, setBalance] = useState('');\r\n  useEffect(()=>{\r\n    getBalance();\r\n    getLeaderboard()\r\n    launchGame();\r\n    }, [])\r\n\r\n  unityContext.on(\"progress\", progressionVal => {\r\n    setProgression(progressionVal * 100);\r\n    console.log(progression);\r\n    });\r\n  unityContext.on('loaded', () => {\r\n    console.log('Done Loading!');\r\n  });\r\n  unityContext.on('receiveMessageFromUnity',  async function receiveMessageFromUnity(txt) {\r\n    // Get element to assign the message\r\n    const finalScore = txt;\r\n    console.log(\"final\" + \" \" + finalScore)\r\n  \r\n    await new Promise(resolve => setTimeout(resolve, 2000));\r\n    var statisticsUpdate = \r\n      {\r\n          PlayFabId: \"1DF75\",\r\n          Statistics:[\r\n          {\r\n            StatisticName: \"CrazyPongDaily\",\r\n            Value: finalScore\r\n          }\r\n        ]\r\n      }\r\n      PlayFabClient.UpdatePlayerStatistics(statisticsUpdate, function (error, result)\r\n      {\r\n        if (result != null){\r\n          var subtractCurrency = {\r\n            Amount: 1,\r\n            VirtualCurrency: \"US\"\r\n          }\r\n          PlayFabClient.SubtractUserVirtualCurrency(subtractCurrency, function (error, result){\r\n            sessionStorage.setItem(\"balance\", (balance1 - .01).toFixed(2));\r\n          })\r\n          console.log(\"Leaderboard Updated!\")}\r\n          else if (result == null) {\r\n            alert(\"Something went wrong sending the leaderboard, please contact us\")\r\n          }\r\n        })\r\n        alert(\"Play again to improve your score or play another game! Scores will be reset tomorrow.\")\r\n        props.history.push('/onecent');\r\n    }\r\n  );\r\n\r\n  const onFullScreen = () => {\r\n    unityContext.setFullscreen(true);\r\n    };\r\n    var balance;\r\n\r\n    const getBalance = async () => {\r\n      balance = sessionStorage.balance;\r\n      setBalance(balance)\r\n    }\r\n    \r\n    const launchGame = async () => {\r\n      await new Promise(resolve => setTimeout(resolve, 500));\r\n        if (balance <= .01 ){\r\n            alert(\"Your account is inneficient, please deposit additional funds\")\r\n            props.history.push('/onecent');\r\n        }\r\n        else {\r\n          verifyPayment();\r\n        }\r\n      }\r\n      \r\n      const verifyPayment = async () => {\r\n        await new Promise(resolve => setTimeout(resolve, 1000));\r\n        if (window.confirm(\"Please confirm 1¢ charge to your account to enter this tournament! You will only be charged if you finish the game and your score is sent to the leaderboard\") == false)\r\n        {\r\n          props.history.push('/onecent');\r\n        }\r\n      }\r\n\r\n      async function getLeaderboard(){\r\n        await new Promise(resolve => setTimeout(resolve, 1500));\r\n        var leaderboard = {\r\n                StartPosition: 0,\r\n                StatisticName: \"CrazyPongDaily\",\r\n                MaxResultsCount: 50\r\n            };\r\n        PlayFabClient.GetLeaderboard(leaderboard, function (error, result)\r\n                {\r\n                    setLeaderboard(result.data.Leaderboard);\r\n                    console.log(leaders)\r\n                });\r\n            }\r\n    \r\n      return (\r\n        <main>\r\n            <header>\r\n                { balance !== null && (\r\n                    <div className=\"balance\">\r\n                        <span className=\"balance1\">Balance: ${balance1}</span>\r\n                    </div>\r\n                    )\r\n                }\r\n                { balance === null && (\r\n                    <div className=\"balance\">\r\n                        <span className=\"balance1\">Not Logged In</span> <br></br>\r\n                        <span className=\"balance1\">Balance: $0</span>\r\n                    </div>\r\n                    )\r\n                }\r\n            </header>\r\n            <div class=\"row\">\r\n                <div className=\"col-1\">\r\n                    <h2 className=\"title\">Leaderboard</h2>\r\n                </div>\r\n                <div className=\"col-8\">\r\n                    <h1 className=\"title\">Crazy Pong!</h1>\r\n                </div>\r\n                <div className=\"col-4\"></div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-2\">\r\n                  <ol className=\"leaderboardList\">\r\n                      {leaders.map((leaderMapped, index) => (\r\n                          <li key={`${leaderMapped.DisplayName}_${leaderMapped.StatValue}`} className=\"leaderboardItem\">{leaderMapped.DisplayName}: {leaderMapped.StatValue}</li>\r\n                      ))}\r\n                  </ol>\r\n                </div>\r\n                <div className=\"col-7\">\r\n            <div id=\"unity-container\" class=\"unity-desktop\">\r\n                <Unity unityContext={unityContext} width=\"960px\" height=\"600px\"/>\r\n                <div id=\"unity-loading-bar\">\r\n                    <div id=\"unity-logo\"></div>\r\n                    <div id=\"unity-progress-bar-empty\">\r\n                    <div id=\"unity-progress-bar-full\"></div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"unity-footer\">\r\n                <button id=\"unity-fullscreen-button\" onClick={onFullScreen}></button>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            </div>\r\n            <div className=\"col-3\"></div>\r\n        </main>\r\n    ) ;\r\n}","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\CrazyPongComponents\\CrazyPongFree.js",["209"],"import React, { useState, useEffect }from 'react';\r\nimport '../../utils/TemplateData/style.css'\r\nimport Unity, { UnityContext } from \"react-unity-webgl\";\r\n\r\nlet unityContext = new UnityContext({\r\n    codeUrl: \"/games/CrazyPong/Build/Crazy_Pong Web.wasm.unityweb\",\r\n    loaderUrl: \"/games/CrazyPong/Build/Crazy_Pong Web.loader.js\",\r\n    frameworkUrl: \"/games/CrazyPong/Build/Crazy_Pong Web.framework.js.unityweb\",\r\n    dataUrl: \"/games/CrazyPong/Build/Crazy_Pong Web.data.unityweb\",\r\n});\r\n\r\nexport default function CrazyPongFree(props) {\r\n    const [balance, setBalance] = useState('');\r\n\r\n    useEffect(() => {\r\n        getBalance();\r\n    })\r\n\r\n    const getBalance = async () => {\r\n        if (sessionStorage.getItem(\"balance\")) {\r\n            setBalance(sessionStorage.balance);\r\n            console.log(balance)\r\n        }\r\n        else {\r\n            setBalance(null);\r\n            console.log(balance)\r\n        }\r\n    }\r\n    const [progression, setProgression] = useState(0);\r\n\r\n    unityContext.on(\"progress\", progressionVal => {\r\n        setProgression(progressionVal * 100);\r\n        console.log(progression);\r\n        });\r\n    unityContext.on('loaded', () => {\r\n        console.log('Done Loading!');\r\n    });\r\n    unityContext.on('receiveMessageFromUnity',  async function receiveMessageFromUnity(txt) {\r\n        // Get element to assign the message\r\n        const finalScore = txt;\r\n        console.log(\"final\" + \" \" + finalScore)\r\n\r\n        await new Promise(resolve => setTimeout(resolve, 1000));\r\n        alert(\"Play again or play another game!\")\r\n        props.history.push('/free');\r\n    });\r\n\r\n    const onFullScreen = () => {\r\n        unityContext.setFullscreen(true);\r\n    };\r\n    \r\n    return (\r\n        <main>\r\n            <header>\r\n                { balance !== null && (\r\n                    <div className=\"balance\">\r\n                        <span className=\"balance1\">Balance: ${balance}</span>\r\n                    </div>\r\n                    )\r\n                }\r\n                { balance === null && (\r\n                    <div className=\"balance\">\r\n                        <span className=\"balance1\">Not Logged In</span> <br></br>\r\n                        <span className=\"balance1\">Balance: $0</span>\r\n                    </div>\r\n                    )\r\n                }\r\n            </header>\r\n            <div class=\"row\">\r\n                <div className=\"col-3\">\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <h1 className=\"title\">Crazy Pong!</h1>\r\n                </div>\r\n                <div className=\"col-3\"></div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\"></div>\r\n                <div className=\"col-6\">\r\n            <div id=\"unity-container\" class=\"unity-desktop\">\r\n                <Unity unityContext={unityContext} width=\"960px\" height=\"600px\"/>\r\n                <div id=\"unity-loading-bar\">\r\n                    <div id=\"unity-logo\"></div>\r\n                    <div id=\"unity-progress-bar-empty\">\r\n                    <div id=\"unity-progress-bar-full\"></div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"unity-footer\">\r\n                <button id=\"unity-fullscreen-button\" onClick={onFullScreen}></button>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            </div>\r\n            <div className=\"col-3\"></div>\r\n        </main>\r\n    ) ;\r\n}","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\CrazyPongComponents\\CrazyPong50.js",["210","211","212"],"import React, { useState, useEffect} from \"react\";\r\nimport '../../utils/TemplateData/style.css'\r\nimport Unity, { UnityContext } from \"react-unity-webgl\";\r\nimport {PlayFabClient} from 'playfab-sdk';\r\n\r\nlet unityContext = new UnityContext({\r\n  codeUrl: \"/games/CrazyPong/Build/Crazy_Pong Web.wasm.unityweb\",\r\n  loaderUrl: \"/games/CrazyPong/Build/Crazy_Pong Web.loader.js\",\r\n  frameworkUrl: \"/games/CrazyPong/Build/Crazy_Pong Web.framework.js.unityweb\",\r\n  dataUrl: \"/games/CrazyPong/Build/Crazy_Pong Web.data.unityweb\",\r\n});\r\n\r\nexport default function CrazyPong50(props) {\r\n    const [progression, setProgression] = useState(0);\r\n    const [leaders, setLeaderboard] = useState([]);\r\n    const [balance1, setBalance] = useState('');\r\n    useEffect(()=>{\r\n        getBalance();\r\n        getLeaderboard()\r\n        launchGame();\r\n    }, [])\r\n\r\n  unityContext.on(\"progress\", progressionVal => {\r\n    setProgression(progressionVal * 100);\r\n    console.log(progression);\r\n    });\r\n  unityContext.on('loaded', () => {\r\n    console.log('Done Loading!');\r\n  });\r\n  unityContext.on('receiveMessageFromUnity',  async function receiveMessageFromUnity(txt) {\r\n    // Get element to assign the message\r\n    const finalScore = txt;\r\n    console.log(\"final\" + \" \" + finalScore)\r\n  \r\n    await new Promise(resolve => setTimeout(resolve, 2000));\r\n    var statisticsUpdate = \r\n      {\r\n          PlayFabId: \"1DF75\",\r\n          Statistics:[\r\n          {\r\n            StatisticName: \"CrazyPongDaily.50\",\r\n            Value: finalScore\r\n          }\r\n        ]\r\n      }\r\n      PlayFabClient.UpdatePlayerStatistics(statisticsUpdate, function (error, result)\r\n      {\r\n        if (result != null){\r\n          var subtractCurrency = {\r\n            Amount: 50,\r\n            VirtualCurrency: \"US\"\r\n          }\r\n          PlayFabClient.SubtractUserVirtualCurrency(subtractCurrency, function (error, result){\r\n            sessionStorage.setItem(\"balance\", (balance1 - .50).toFixed(2));\r\n          })\r\n          console.log(\"Leaderboard Updated!\")}\r\n          else if (result == null) {\r\n            alert(\"Something went wrong sending the leaderboard, please contact us\")\r\n          }\r\n        })\r\n        alert(\"Play again to improve your score or play another game! Scores will be reset tomorrow.\")\r\n        props.history.push('/fiftycent');\r\n    }\r\n  );\r\n\r\n  const onFullScreen = () => {\r\n    unityContext.setFullscreen(true);\r\n    };\r\n    var balance;\r\n\r\n    const getBalance = async () => {\r\n      balance = sessionStorage.balance;\r\n      setBalance(balance)\r\n    }\r\n    \r\n    const launchGame = async () => {\r\n      await new Promise(resolve => setTimeout(resolve, 500));\r\n        if (balance <= .50 ){\r\n            alert(\"Your account is inneficient, please deposit additional funds\")\r\n            props.history.push('/fiftycent');\r\n        }\r\n        else {\r\n          verifyPayment();\r\n        }\r\n      }\r\n      \r\n      const verifyPayment = async () => {\r\n        await new Promise(resolve => setTimeout(resolve, 1000));\r\n        if (window.confirm(\"Please confirm 50¢ charge to your account to enter this tournament! You will only be charged if you finish the game and your score is sent to the leaderboard\") == false)\r\n        {\r\n          props.history.push('/fiftycent');\r\n        }\r\n      }\r\n\r\n      async function getLeaderboard(){\r\n        await new Promise(resolve => setTimeout(resolve, 1500));\r\n        var leaderboard = {\r\n                StartPosition: 0,\r\n                StatisticName: \"CrazyPongDaily.50\",\r\n                MaxResultsCount: 50\r\n            };\r\n        PlayFabClient.GetLeaderboard(leaderboard, function (error, result)\r\n                {\r\n                    setLeaderboard(result.data.Leaderboard);\r\n                    console.log(leaders)\r\n                });\r\n            }\r\n    \r\n    return (\r\n        <main>\r\n            <header>\r\n                { balance !== null && (\r\n                    <div className=\"balance\">\r\n                        <span className=\"balance1\">Balance: ${balance1}</span>\r\n                    </div>\r\n                    )\r\n                }\r\n                { balance === null && (\r\n                    <div className=\"balance\">\r\n                        <span className=\"balance1\">Not Logged In</span> <br></br>\r\n                        <span className=\"balance1\">Balance: $0</span>\r\n                    </div>\r\n                    )\r\n                }\r\n            </header>\r\n            <div class=\"row\">\r\n                <div className=\"col-1\">\r\n                    <h2 className=\"title\">Leaderboard</h2>\r\n                </div>\r\n                <div className=\"col-8\">\r\n                    <h1 className=\"title\">Crazy Pong!</h1>\r\n                </div>\r\n                <div className=\"col-4\"></div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-2\">\r\n                    <ol className=\"leaderboardList\">\r\n                        {leaders.map((leaderMapped, index) => (\r\n                            <li key={`${leaderMapped.DisplayName}_${leaderMapped.StatValue}`} className=\"leaderboardItem\">{leaderMapped.DisplayName}: {leaderMapped.StatValue}</li>\r\n                        ))}\r\n                    </ol>\r\n                </div>\r\n                <div className=\"col-7\">\r\n            <div id=\"unity-container\" class=\"unity-desktop\">\r\n                <Unity unityContext={unityContext} width=\"960px\" height=\"600px\"/>\r\n                <div id=\"unity-loading-bar\">\r\n                    <div id=\"unity-logo\"></div>\r\n                    <div id=\"unity-progress-bar-empty\">\r\n                    <div id=\"unity-progress-bar-full\"></div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"unity-footer\">\r\n                <button id=\"unity-fullscreen-button\" onClick={onFullScreen}></button>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            </div>\r\n            <div className=\"col-3\"></div>\r\n        </main>\r\n    ) ;\r\n}","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\CrazyPongComponents\\CrazyPong05.js",["213","214","215"],"import React, { useState, useEffect} from \"react\";\r\nimport '../../utils/TemplateData/style.css'\r\nimport Unity, { UnityContext } from \"react-unity-webgl\";\r\nimport {PlayFabClient} from 'playfab-sdk';\r\n\r\nlet unityContext = new UnityContext({\r\n  codeUrl: \"/games/CrazyPong/Build/Crazy_Pong Web.wasm.unityweb\",\r\n  loaderUrl: \"/games/CrazyPong/Build/Crazy_Pong Web.loader.js\",\r\n  frameworkUrl: \"/games/CrazyPong/Build/Crazy_Pong Web.framework.js.unityweb\",\r\n  dataUrl: \"/games/CrazyPong/Build/Crazy_Pong Web.data.unityweb\",\r\n});\r\n\r\nexport default function CrazyPong05(props) {\r\n  const [progression, setProgression] = useState(0);\r\n  const [leaders, setLeaderboard] = useState([]);\r\n  const [balance1, setBalance] = useState('');\r\n  useEffect(()=>{\r\n    getBalance();\r\n    getLeaderboard()\r\n    launchGame();\r\n    }, [])\r\n\r\n  unityContext.on(\"progress\", progressionVal => {\r\n    setProgression(progressionVal * 100);\r\n    console.log(progression);\r\n    });\r\n  unityContext.on('loaded', () => {\r\n    console.log('Done Loading!');\r\n  });\r\n  unityContext.on('receiveMessageFromUnity',  async function receiveMessageFromUnity(txt) {\r\n    // Get element to assign the message\r\n    const finalScore = txt;\r\n    console.log(\"final\" + \" \" + finalScore)\r\n  \r\n    await new Promise(resolve => setTimeout(resolve, 2000));\r\n    var statisticsUpdate = \r\n      {\r\n          PlayFabId: \"1DF75\",\r\n          Statistics:[\r\n          {\r\n            StatisticName: \"CrazyPongDaily.05\",\r\n            Value: finalScore\r\n          }\r\n        ]\r\n      }\r\n      PlayFabClient.UpdatePlayerStatistics(statisticsUpdate, function (error, result)\r\n      {\r\n        if (result != null){\r\n          var subtractCurrency = {\r\n            Amount: 5,\r\n            VirtualCurrency: \"US\"\r\n          }\r\n          PlayFabClient.SubtractUserVirtualCurrency(subtractCurrency, function (error, result){\r\n            sessionStorage.setItem(\"balance\", (balance1 - .05).toFixed(2));\r\n          })\r\n          console.log(\"Leaderboard Updated!\")}\r\n          else if (result == null) {\r\n            alert(\"Something went wrong sending the leaderboard, please contact us\")\r\n          }\r\n        })\r\n        alert(\"Play again to improve your score or play another game! Scores will be reset tomorrow.\")\r\n        props.history.push('/fiftycent');\r\n    }\r\n  );\r\n\r\n    const onFullScreen = () => {\r\n        unityContext.setFullscreen(true);\r\n        };\r\n    var balance;\r\n\r\n    const getBalance = async () => {\r\n        balance = sessionStorage.balance;\r\n        setBalance(balance)\r\n    }\r\n    \r\n    const launchGame = async () => {\r\n      await new Promise(resolve => setTimeout(resolve, 500));\r\n        if (balance <= .05 ){\r\n            alert(\"Your account is inneficient, please deposit additional funds\")\r\n            props.history.push('/fivecent');\r\n        }\r\n        else {\r\n          verifyPayment();\r\n        }\r\n      }\r\n      \r\n      const verifyPayment = async () => {\r\n        await new Promise(resolve => setTimeout(resolve, 1000));\r\n        if (window.confirm(\"Please confirm 5¢ charge to your account to enter this tournament! You will only be charged if you finish the game and your score is sent to the leaderboard\") == false)\r\n        {\r\n          props.history.push('/fivecent');\r\n        }\r\n      }\r\n\r\n      async function getLeaderboard(){\r\n        await new Promise(resolve => setTimeout(resolve, 1500));\r\n        var leaderboard = {\r\n                StartPosition: 0,\r\n                StatisticName: \"CrazyPongDaily.05\",\r\n                MaxResultsCount: 50\r\n            };\r\n        PlayFabClient.GetLeaderboard(leaderboard, function (error, result)\r\n                {\r\n                    setLeaderboard(result.data.Leaderboard);\r\n                    console.log(leaders)\r\n                });\r\n            }\r\n    \r\n    return (\r\n        <main>\r\n            <header>\r\n                { balance !== null && (\r\n                    <div className=\"balance\">\r\n                        <span className=\"balance1\">Balance: ${balance1}</span>\r\n                    </div>\r\n                    )\r\n                }\r\n                { balance === null && (\r\n                    <div className=\"balance\">\r\n                        <span className=\"balance1\">Not Logged In</span> <br></br>\r\n                        <span className=\"balance1\">Balance: $0</span>\r\n                    </div>\r\n                    )\r\n                }\r\n            </header>\r\n            <div class=\"row\">\r\n                <div className=\"col-1\">\r\n                    <h2 className=\"title\">Leaderboard</h2>\r\n                </div>\r\n                <div className=\"col-8\">\r\n                    <h1 className=\"title\">Crazy Pong!</h1>\r\n                </div>\r\n                <div className=\"col-4\"></div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-2\">\r\n                    <ol className=\"leaderboardList\">\r\n                        {leaders.map((leaderMapped, index) => (\r\n                            <li key={`${leaderMapped.DisplayName}_${leaderMapped.StatValue}`} className=\"leaderboardItem\">{leaderMapped.DisplayName}: {leaderMapped.StatValue}</li>\r\n                        ))}\r\n                    </ol>\r\n                </div>\r\n                <div className=\"col-7\">\r\n            <div id=\"unity-container\" class=\"unity-desktop\">\r\n                <Unity unityContext={unityContext} width=\"1020px\" height=\"600px\"/>\r\n                <div id=\"unity-loading-bar\">\r\n                    <div id=\"unity-logo\"></div>\r\n                    <div id=\"unity-progress-bar-empty\">\r\n                    <div id=\"unity-progress-bar-full\"></div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"unity-footer\">\r\n                <button id=\"unity-fullscreen-button\" onClick={onFullScreen}></button>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            </div>\r\n            <div className=\"col-3\"></div>\r\n        </main>\r\n    ) ;\r\n}","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\CrazyPongComponents\\CrazyPong1.js",["216","217","218"],"import React, { useState, useEffect} from \"react\";\r\nimport '../../utils/TemplateData/style.css'\r\nimport Unity, { UnityContext } from \"react-unity-webgl\";\r\nimport {PlayFabClient} from 'playfab-sdk';\r\n\r\nlet unityContext = new UnityContext({\r\n  codeUrl: \"/games/CrazyPong/Build/Crazy_Pong Web.wasm.unityweb\",\r\n  loaderUrl: \"/games/CrazyPong/Build/Crazy_Pong Web.loader.js\",\r\n  frameworkUrl: \"/games/CrazyPong/Build/Crazy_Pong Web.framework.js.unityweb\",\r\n  dataUrl: \"/games/CrazyPong/Build/Crazy_Pong Web.data.unityweb\",\r\n});\r\n\r\nexport default function CrazyPong1(props) {\r\n  const [progression, setProgression] = useState(0);\r\n  const [leaders, setLeaderboard] = useState([]);\r\n  const [balance1, setBalance] = useState('');\r\n\r\n  useEffect(()=>{\r\n    getBalance();\r\n    getLeaderboard();\r\n    launchGame();\r\n    }, [])\r\n\r\n  unityContext.on(\"progress\", progressionVal => {\r\n    setProgression(progressionVal * 100);\r\n    console.log(progression);\r\n    });\r\n  unityContext.on('loaded', () => {\r\n    console.log('Done Loading!');\r\n  });\r\n  unityContext.on('receiveMessageFromUnity',  async function receiveMessageFromUnity(txt) {\r\n    // Get element to assign the message\r\n    const finalScore = txt;\r\n    console.log(\"final\" + \" \" + finalScore)\r\n  \r\n    await new Promise(resolve => setTimeout(resolve, 2000));\r\n    var statisticsUpdate = \r\n      {\r\n          PlayFabId: \"1DF75\",\r\n          Statistics:[\r\n          {\r\n            StatisticName: \"CrazyPongDaily1\",\r\n            Value: finalScore\r\n          }\r\n        ]\r\n      }\r\n      PlayFabClient.UpdatePlayerStatistics(statisticsUpdate, function (error, result)\r\n      {\r\n        if (result != null){\r\n          var subtractCurrency = {\r\n            Amount: 100,\r\n            VirtualCurrency: \"US\"\r\n          }\r\n          PlayFabClient.SubtractUserVirtualCurrency(subtractCurrency, function (error, result){\r\n            sessionStorage.setItem(\"balance\", (balance1 - 1).toFixed(2));\r\n          })\r\n          console.log(\"Leaderboard Updated!\")}\r\n          else if (result == null) {\r\n            alert(\"Something went wrong sending the leaderboard, please contact us\")\r\n          }\r\n        })\r\n        alert(\"Play again to improve your score or play another game! Scores will be reset tomorrow.\")\r\n        props.history.push('/onedollar');\r\n    }\r\n  );\r\n\r\n  const onFullScreen = () => {\r\n    unityContext.setFullscreen(true);\r\n    };\r\n    var balance;\r\n\r\n    const getBalance = async () => {\r\n        balance = sessionStorage.balance;\r\n        setBalance(balance)\r\n    }\r\n    \r\n    const launchGame = async () => {\r\n      await new Promise(resolve => setTimeout(resolve, 500));\r\n        if (balance <= 1 ){\r\n            alert(\"Your account is inneficient, please deposit additional funds\")\r\n            props.history.push('/onedollar');\r\n        }\r\n        else {\r\n          verifyPayment();\r\n        }\r\n      }\r\n      \r\n      const verifyPayment = async () => {\r\n        await new Promise(resolve => setTimeout(resolve, 1000));\r\n        if (window.confirm(\"Please confirm $1 charge to your account to enter this tournament! You will only be charged if you finish the game and your score is sent to the leaderboard\") == false)\r\n        {\r\n          props.history.push('/onedollar');\r\n        }\r\n      }\r\n\r\n    async function getLeaderboard(){\r\n        await new Promise(resolve => setTimeout(resolve, 1500));\r\n        var leaderboard = {\r\n                StartPosition: 0,\r\n                StatisticName: \"CrazyPongDaily1\",\r\n                MaxResultsCount: 50\r\n            };\r\n        PlayFabClient.GetLeaderboard(leaderboard, function (error, result)\r\n                {\r\n                    setLeaderboard(result.data.Leaderboard);\r\n                    console.log(leaders)\r\n                });\r\n            }\r\n    \r\n    return (\r\n            <main>\r\n                <header>\r\n                { balance !== null && (\r\n                    <div className=\"balance\">\r\n                        <span className=\"balance1\">Balance: ${balance1}</span>\r\n                    </div>\r\n                    )\r\n                }\r\n                { balance === null && (\r\n                    <div className=\"balance\">\r\n                        <span className=\"balance1\">Not Logged In</span> <br></br>\r\n                        <span className=\"balance1\">Balance: $0</span>\r\n                    </div>\r\n                    )\r\n                }\r\n            </header>\r\n                <div class=\"row\">\r\n                    <div className=\"col-1\">\r\n                        <h2 className=\"title\">Leaderboard</h2>\r\n                    </div>\r\n                    <div className=\"col-8\">\r\n                        <h1 className=\"title\">Crazy Pong!</h1>\r\n                    </div>\r\n                    <div className=\"col-4\"></div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-2\">\r\n                        <ol className=\"leaderboardList\">\r\n                            {leaders.map((leaderMapped, index) => (\r\n                                <li key={`${leaderMapped.DisplayName}_${leaderMapped.StatValue}`} className=\"leaderboardItem\">{leaderMapped.DisplayName}: {leaderMapped.StatValue}</li>\r\n                            ))}\r\n                        </ol>\r\n                    </div>\r\n                    <div className=\"col-7\">\r\n                <div id=\"unity-container\" class=\"unity-desktop\">\r\n                    <Unity unityContext={unityContext} width=\"960px\" height=\"600px\"/>\r\n                    <div id=\"unity-loading-bar\">\r\n                        <div id=\"unity-logo\"></div>\r\n                        <div id=\"unity-progress-bar-empty\">\r\n                        <div id=\"unity-progress-bar-full\"></div>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"unity-footer\">\r\n                        <button id=\"unity-fullscreen-button\" onClick={onFullScreen}></button>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                </div>\r\n                <div className=\"col-3\"></div>\r\n            </main>\r\n        ) ;\r\n    }","C:\\Users\\markl\\Documents\\litgamers\\litgamers\\litgamers\\src\\components\\CrazyPongComponents\\CrazyPong5.js",["219","220","221"],"import React, { useState, useEffect} from \"react\";\r\nimport '../../utils/TemplateData/style.css'\r\nimport Unity, { UnityContext } from \"react-unity-webgl\";\r\nimport {PlayFabClient} from 'playfab-sdk';\r\n\r\nlet unityContext = new UnityContext({\r\n  codeUrl: \"/games/CrazyPong/Build/Crazy_Pong Web.wasm.unityweb\",\r\n  loaderUrl: \"/games/CrazyPong/Build/Crazy_Pong Web.loader.js\",\r\n  frameworkUrl: \"/games/CrazyPong/Build/Crazy_Pong Web.framework.js.unityweb\",\r\n  dataUrl: \"/games/CrazyPong/Build/Crazy_Pong Web.data.unityweb\",\r\n});\r\n\r\nexport default function CrazyPong5(props) {\r\n  const [progression, setProgression] = useState(0);\r\n  const [leaders, setLeaderboard] = useState([]);\r\n  const [balance1, setBalance] = useState('');\r\n  useEffect(()=>{\r\n    getBalance();\r\n    getLeaderboard()\r\n    launchGame();\r\n    }, [])\r\n\r\n  unityContext.on(\"progress\", progressionVal => {\r\n    setProgression(progressionVal * 100);\r\n    console.log(progression);\r\n    });\r\n  unityContext.on('loaded', () => {\r\n    console.log('Done Loading!');\r\n  });\r\n  unityContext.on('receiveMessageFromUnity',  async function receiveMessageFromUnity(txt) {\r\n    // Get element to assign the message\r\n    const finalScore = txt;\r\n    console.log(\"final\" + \" \" + finalScore)\r\n  \r\n    await new Promise(resolve => setTimeout(resolve, 2000));\r\n    var statisticsUpdate = \r\n      {\r\n          PlayFabId: \"1DF75\",\r\n          Statistics:[\r\n          {\r\n            StatisticName: \"CrazyPongDaily5\",\r\n            Value: finalScore\r\n          }\r\n        ]\r\n      }\r\n      PlayFabClient.UpdatePlayerStatistics(statisticsUpdate, function (error, result)\r\n      {\r\n        if (result != null){\r\n          var subtractCurrency = {\r\n            Amount: 500,\r\n            VirtualCurrency: \"US\"\r\n          }\r\n          PlayFabClient.SubtractUserVirtualCurrency(subtractCurrency, function (error, result){\r\n            sessionStorage.setItem(\"balance\", (balance1 - 5).toFixed(2));\r\n          })\r\n          console.log(\"Leaderboard Updated!\")}\r\n          else if (result == null) {\r\n            alert(\"Something went wrong sending the leaderboard, please contact us\")\r\n          }\r\n        })\r\n        alert(\"Play again to improve your score or play another game! Scores will be reset tomorrow.\")\r\n        props.history.push('/fivedollar');\r\n    }\r\n  );\r\n\r\n  const onFullScreen = () => {\r\n    unityContext.setFullscreen(true);\r\n    };\r\n    var balance;\r\n\r\n    const getBalance = async () => {\r\n        balance = sessionStorage.balance;\r\n        setBalance(balance)\r\n    }\r\n    \r\n    const launchGame = async () => {\r\n      await new Promise(resolve => setTimeout(resolve, 500));\r\n        if (balance <= 5 ){\r\n            alert(\"Your account is inneficient, please deposit additional funds\")\r\n            props.history.push('/fivedollar');\r\n        }\r\n        else {\r\n          verifyPayment();\r\n        }\r\n      }\r\n      \r\n      const verifyPayment = async () => {\r\n        await new Promise(resolve => setTimeout(resolve, 1000));\r\n        if (window.confirm(\"Please confirm $5 charge to your account to enter this tournament! You will only be charged if you finish the game and your score is sent to the leaderboard\") == false)\r\n        {\r\n          props.history.push('/fivedollar');\r\n        }\r\n      }\r\n\r\n      async function getLeaderboard(){\r\n        await new Promise(resolve => setTimeout(resolve, 1500));\r\n        var leaderboard = {\r\n                StartPosition: 0,\r\n                StatisticName: \"CrazyPongDaily5\",\r\n                MaxResultsCount: 50\r\n            };\r\n        PlayFabClient.GetLeaderboard(leaderboard, function (error, result)\r\n                {\r\n                    setLeaderboard(result.data.Leaderboard);\r\n                    console.log(leaders)\r\n                });\r\n            }\r\n    \r\n    return (\r\n        <main>\r\n            <header>\r\n                { balance !== null && (\r\n                    <div className=\"balance\">\r\n                        <span className=\"balance1\">Balance: ${balance1}</span>\r\n                    </div>\r\n                    )\r\n                }\r\n                { balance === null && (\r\n                    <div className=\"balance\">\r\n                        <span className=\"balance1\">Not Logged In</span> <br></br>\r\n                        <span className=\"balance1\">Balance: $0</span>\r\n                    </div>\r\n                    )\r\n                }\r\n            </header>\r\n            <div class=\"row\">\r\n                <div className=\"col-1\">\r\n                    <h2 className=\"title\">Leaderboard</h2>\r\n                </div>\r\n                <div className=\"col-8\">\r\n                    <h1 className=\"title\">Crazy Pong!</h1>\r\n                </div>\r\n                <div className=\"col-4\"></div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-2\">\r\n                    <ol className=\"leaderboardList\">\r\n                        {leaders.map((leaderMapped, index) => (\r\n                            <li key={`${leaderMapped.DisplayName}_${leaderMapped.StatValue}`} className=\"leaderboardItem\">{leaderMapped.DisplayName}: {leaderMapped.StatValue}</li>\r\n                        ))}\r\n                    </ol>\r\n                </div>\r\n                <div className=\"col-7\">\r\n            <div id=\"unity-container\" class=\"unity-desktop\">\r\n                <Unity unityContext={unityContext} width=\"960px\" height=\"600px\"/>\r\n                <div id=\"unity-loading-bar\">\r\n                    <div id=\"unity-logo\"></div>\r\n                    <div id=\"unity-progress-bar-empty\">\r\n                    <div id=\"unity-progress-bar-full\"></div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"unity-footer\">\r\n                <button id=\"unity-fullscreen-button\" onClick={onFullScreen}></button>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            </div>\r\n            <div className=\"col-3\"></div>\r\n        </main>\r\n    ) ;\r\n}",{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","severity":1,"message":"227","line":49,"column":79,"nodeType":"228","endLine":49,"endColumn":94},{"ruleId":"229","severity":1,"message":"230","line":3,"column":9,"nodeType":"231","messageId":"232","endLine":3,"endColumn":22},{"ruleId":"229","severity":1,"message":"233","line":9,"column":11,"nodeType":"231","messageId":"232","endLine":9,"endColumn":15},{"ruleId":"229","severity":1,"message":"234","line":176,"column":9,"nodeType":"231","messageId":"232","endLine":176,"endColumn":20},{"ruleId":"235","severity":1,"message":"236","line":31,"column":62,"nodeType":"237","messageId":"238","endLine":31,"endColumn":63},{"ruleId":"235","severity":1,"message":"236","line":38,"column":62,"nodeType":"237","messageId":"238","endLine":38,"endColumn":63},{"ruleId":"239","severity":1,"message":"240","line":21,"column":8,"nodeType":"241","endLine":21,"endColumn":10,"suggestions":"242"},{"ruleId":"235","severity":1,"message":"236","line":33,"column":25,"nodeType":"237","messageId":"238","endLine":33,"endColumn":26},{"ruleId":"243","severity":1,"message":"244","line":89,"column":188,"nodeType":"237","messageId":"245","endLine":89,"endColumn":190},{"ruleId":"239","severity":1,"message":"240","line":21,"column":8,"nodeType":"241","endLine":21,"endColumn":10,"suggestions":"246"},{"ruleId":"235","severity":1,"message":"236","line":33,"column":25,"nodeType":"237","messageId":"238","endLine":33,"endColumn":26},{"ruleId":"243","severity":1,"message":"244","line":89,"column":188,"nodeType":"237","messageId":"245","endLine":89,"endColumn":190},{"ruleId":"239","severity":1,"message":"240","line":21,"column":8,"nodeType":"241","endLine":21,"endColumn":10,"suggestions":"247"},{"ruleId":"235","severity":1,"message":"236","line":33,"column":25,"nodeType":"237","messageId":"238","endLine":33,"endColumn":26},{"ruleId":"243","severity":1,"message":"244","line":89,"column":189,"nodeType":"237","messageId":"245","endLine":89,"endColumn":191},{"ruleId":"239","severity":1,"message":"240","line":22,"column":8,"nodeType":"241","endLine":22,"endColumn":10,"suggestions":"248"},{"ruleId":"235","severity":1,"message":"236","line":34,"column":25,"nodeType":"237","messageId":"238","endLine":34,"endColumn":26},{"ruleId":"243","severity":1,"message":"244","line":90,"column":188,"nodeType":"237","messageId":"245","endLine":90,"endColumn":190},{"ruleId":"239","severity":1,"message":"240","line":21,"column":8,"nodeType":"241","endLine":21,"endColumn":10,"suggestions":"249"},{"ruleId":"235","severity":1,"message":"236","line":33,"column":25,"nodeType":"237","messageId":"238","endLine":33,"endColumn":26},{"ruleId":"243","severity":1,"message":"244","line":89,"column":188,"nodeType":"237","messageId":"245","endLine":89,"endColumn":190},{"ruleId":"235","severity":1,"message":"236","line":41,"column":29,"nodeType":"237","messageId":"238","endLine":41,"endColumn":30},{"ruleId":"222","replacedBy":"250"},{"ruleId":"224","replacedBy":"251"},{"ruleId":"239","severity":1,"message":"240","line":21,"column":8,"nodeType":"241","endLine":21,"endColumn":10,"suggestions":"252"},{"ruleId":"235","severity":1,"message":"236","line":33,"column":25,"nodeType":"237","messageId":"238","endLine":33,"endColumn":26},{"ruleId":"243","severity":1,"message":"244","line":89,"column":188,"nodeType":"237","messageId":"245","endLine":89,"endColumn":190},{"ruleId":"235","severity":1,"message":"236","line":41,"column":29,"nodeType":"237","messageId":"238","endLine":41,"endColumn":30},{"ruleId":"239","severity":1,"message":"240","line":21,"column":8,"nodeType":"241","endLine":21,"endColumn":10,"suggestions":"253"},{"ruleId":"235","severity":1,"message":"236","line":33,"column":25,"nodeType":"237","messageId":"238","endLine":33,"endColumn":26},{"ruleId":"243","severity":1,"message":"244","line":89,"column":189,"nodeType":"237","messageId":"245","endLine":89,"endColumn":191},{"ruleId":"239","severity":1,"message":"240","line":21,"column":8,"nodeType":"241","endLine":21,"endColumn":10,"suggestions":"254"},{"ruleId":"235","severity":1,"message":"236","line":33,"column":25,"nodeType":"237","messageId":"238","endLine":33,"endColumn":26},{"ruleId":"243","severity":1,"message":"244","line":89,"column":188,"nodeType":"237","messageId":"245","endLine":89,"endColumn":190},{"ruleId":"239","severity":1,"message":"240","line":22,"column":8,"nodeType":"241","endLine":22,"endColumn":10,"suggestions":"255"},{"ruleId":"235","severity":1,"message":"236","line":34,"column":25,"nodeType":"237","messageId":"238","endLine":34,"endColumn":26},{"ruleId":"243","severity":1,"message":"244","line":90,"column":188,"nodeType":"237","messageId":"245","endLine":90,"endColumn":190},{"ruleId":"239","severity":1,"message":"240","line":21,"column":8,"nodeType":"241","endLine":21,"endColumn":10,"suggestions":"256"},{"ruleId":"235","severity":1,"message":"236","line":33,"column":25,"nodeType":"237","messageId":"238","endLine":33,"endColumn":26},{"ruleId":"243","severity":1,"message":"244","line":89,"column":188,"nodeType":"237","messageId":"245","endLine":89,"endColumn":190},"no-native-reassign",["257"],"no-negated-in-lhs",["258"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-unused-vars","'PlayFabClient' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'addCurrency' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getBalance', 'getLeaderboard', and 'launchGame'. Either include them or remove the dependency array.","ArrayExpression",["259"],"eqeqeq","Expected '===' and instead saw '=='.","unexpected",["260"],["261"],["262"],["263"],["257"],["258"],["264"],["265"],["266"],["267"],["268"],"no-global-assign","no-unsafe-negation",{"desc":"269","fix":"270"},{"desc":"269","fix":"271"},{"desc":"269","fix":"272"},{"desc":"269","fix":"273"},{"desc":"269","fix":"274"},{"desc":"269","fix":"275"},{"desc":"269","fix":"276"},{"desc":"269","fix":"277"},{"desc":"269","fix":"278"},{"desc":"269","fix":"279"},"Update the dependencies array to be: [getBalance, getLeaderboard, launchGame]",{"range":"280","text":"281"},{"range":"282","text":"281"},{"range":"283","text":"281"},{"range":"284","text":"281"},{"range":"285","text":"281"},{"range":"286","text":"281"},{"range":"287","text":"281"},{"range":"288","text":"281"},{"range":"289","text":"281"},{"range":"290","text":"281"},[818,820],"[getBalance, getLeaderboard, launchGame]",[817,819],[838,840],[820,822],[818,820],[811,813],[831,833],[811,813],[813,815],[810,812]]